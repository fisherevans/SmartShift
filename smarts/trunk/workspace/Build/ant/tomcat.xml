<project name="Tomcat" default="tomcat-deploy" basedir="..">
	<property file="ant/ant.properties" />
	<property file="${build.tomcat.props}" />

	<property name="war.file" value="${project.prefix}${project.context}.war" />
	<property name="war.path" value="${dist.dir}/${war.file}" />
	<property name="war.abs.path" location="${war.path}" />

	<property name="project.dir" location="../${project.prefix}${project.name}" />
	<property name="common.dir" location="../${project.prefix}${common.name}" />
	<property name="client.dir" location="../${project.prefix}${client.name}" />


	<path id="classpath">
		<fileset dir="${lib.dir}/jar">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask">
		<classpath refid="classpath" />
	</taskdef>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask">
		<classpath refid="classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="classpath" />
	</taskdef>

	<target name="build-clean">
		<echo>Cleaning the build directory</echo>
		<delete dir="${out.dir}" />
	</target>

	<target name="prep-accounts">
		<echo>Creating the required property file for Accounts builds</echo>
		<echo message="project.name=Tomcat-Accounts&#xa;project.context=accounts" file="${build.tomcat.props}" append="false" />
	</target>

	<target name="prep-business">
		<echo>Creating the required property file for Business builds</echo>
		<echo message="project.name=Tomcat-Business&#xa;project.context=business" file="${build.tomcat.props}" append="false" />
	</target>

	<target name="prep-notifications">
		<echo>Creating the required property file for Notification builds</echo>
		<echo message="project.name=Tomcat-Notifications&#xa;project.context=notifications" file="${build.tomcat.props}" append="false" />
	</target>

	<target name="build-init">
		<fail message="Project name is not set. Run a prep target!">
			<condition>
				<or>
					<equals arg1="${project.name}" arg2="" />
					<not>
						<isset property="project.name" />
					</not>
				</or>
			</condition>
		</fail>
		<echo>Creating the base WAR folder structure</echo>
		<mkdir dir="${build.dir}/${project.prefix}${project.name}" />
		<copy todir="${build.dir}/${project.prefix}${project.name}">
			<fileset dir="${common.dir}/web" />
			<fileset dir="${project.dir}/web" />
		</copy>
		<mkdir dir="${build.dir}/${project.prefix}${project.name}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/${project.prefix}${project.name}/WEB-INF/classes/res" />
		<mkdir dir="${build.dir}/${project.prefix}${project.name}/WEB-INF/lib" />
	</target>

	<target name="build-compile" depends="build-init">
		<echo>Compiling the java files</echo>
		<javac destdir="${build.dir}/${project.prefix}${project.name}/WEB-INF/classes" verbose="false" debug="${build.debug}" debuglevel="lines,vars,source">
			<classpath refid="classpath" />
			<src path="${common.dir}/src" />
			<src path="${project.dir}/src" />
		</javac>
	</target>

	<target name="build-package" depends="build-compile">
		<echo>Packaging required files into the build directory</echo>
		<copy todir="${build.dir}/${project.prefix}${project.name}/WEB-INF/lib">
			<fileset dir="${lib.dir}/jar">
				<exclude name="javax.servlet.jar" />
				<exclude name="servlet-api.jar" />
			</fileset>
		</copy>
		<touch file="${build.dir}/${project.prefix}${project.name}/WEB-INF/classes/app.properties" />
		<concat destfile="${build.dir}/${project.prefix}${project.name}/WEB-INF/classes/app.properties" append="false" fixlastline="yes">
			<filelist dir="${common.dir}" files="common.properties" />
			<filelist dir="${project.dir}" files="${project.context}.properties" />
		</concat>
	</target>

	<target name="build-war" depends="build-package">
		<echo>Creating the WAR deployment file</echo>
		<war destfile="${war.path}" webxml="${build.dir}/${project.prefix}${project.name}/WEB-INF/web.xml">
			<fileset dir="${build.dir}/${project.prefix}${project.name}" />
		</war>
	</target>

	<target name="tomcat-deploy" depends="build-war, tomcat-remove">
		<echo>Deploying WAR file to tomcat</echo>
		<deploy url="${tomcat.url}" username="${tomcat.user}" password="${tomcat.pass}" path="/${project.context}" war="${war.abs.path}" />
	</target>

	<target name="tomcat-reload">
		<reload url="${tomcat.url}" username="${tomcat.user}" password="${tomcat.pass}" path="/${project.context}" />
	</target>

	<target name="tomcat-remove">
		<undeploy failonerror="false" url="${tomcat.url}" username="${tomcat.user}" password="${tomcat.pass}" path="/${project.context}" />
	</target>
</project>